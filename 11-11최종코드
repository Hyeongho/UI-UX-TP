import { StatusBar } from 'expo-status-bar';
// import React from 'react';
import React, {useState, useRef} from 'react';
import { StyleSheet, Text, View, SafeAreaView, Platform, TouchableHighlight, Image, ImageBackground} from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { List, DataTable, Checkbox, Dialog, Portal, Paragraph, Modal, Provider, Snackbar, Button } from 'react-native-paper'
import {PanGestureHandler} from 'react-native-gesture-handler';

function HomeScreen({navigation})
{
  const MoveToMain = () =>
  {
    navigation.navigate("Main");
  }

return(
  <View style = {styles.safeAreaContainer}>
    <Button onPress = {MoveToMain} style = {{backgroundColor: 'gray'}} color = 'white'>TAP TO START</Button>
  </View>
);
}

function MainScreen()
{
  const pressSetting = () =>
  {
    alert("환경설정");
  }
  const [sideLength, setSideLength] = useState(100);

  const [visibleCity, setCity] = React.useState(false);

  const [visibleAnt, setAnt] = React.useState(false);

  const [visibleBuilding, setBuilding] = React.useState(false);

  const [visibleMap, setMap] = React.useState(false);

  const [visibleWorker, setWorker] = React.useState(false);
  const showWorker = () => setWorker(true);
  const hideWorker = () => setWorker(false);

  const [visibleSupervisor, setSupervisor] = React.useState(false);
  const showSupervisor = () => setSupervisor(true);
  const hideSupervisor = () => setSupervisor(false);

  const [visibleOffice, setOffice] = React.useState(false);
  const showOffice = () => setOffice(true);
  const hideOffice = () => setOffice(false);

  const [visibleChairman, setChairman] = React.useState(false);
  const showChairman = () => setChairman(true);
  const hideChairman = () => setChairman(false);

  const [visibleHouse, setHouse] = React.useState(false);
  const showHouse = () => setHouse(true);
  const hideHouse = () => setHouse(false);

  const [visibleApartment, setApartment] = React.useState(false);
  const showApartment = () => setApartment(true);
  const hideApartment = () => setApartment(false);

  const [visibleCompany, setCompany] = React.useState(false);
  const showCompany = () => setCompany(true);
  const hideCompany = () => setCompany(false);

  const [visibleHotel, setHotel] = React.useState(false);
  const showHotel = () => setHotel(true);
  const hideHotel = () => setHotel(false);

  const [visibleStore, setStore] = React.useState(true);

  const [visibleCollection, setCollection] = React.useState(false);

  const [visibleExpansion, setExpansion] = React.useState(false);

  const [visibleAchievement, setAchievement] = React.useState(false);

  let list = null;

  if (visibleCity) {
    list = 
    <List.Accordion style = {{backgroundColor: 'brown'}}>
        <DataTable style = {{backgroundColor: 'white'}}>
          <DataTable.Row>
            <DataTable.Cell>시장</DataTable.Cell>
            <DataTable.Cell>진우</DataTable.Cell>

          </DataTable.Row>
            <DataTable.Row>
            <DataTable.Cell>도시 등급</DataTable.Cell>
            <DataTable.Cell>소도시</DataTable.Cell>

          </DataTable.Row>

          <DataTable.Row>
            <DataTable.Cell>보유자원</DataTable.Cell>
            <DataTable.Cell>73503</DataTable.Cell>

          </DataTable.Row>

          <DataTable.Row>
            <DataTable.Cell>인구수</DataTable.Cell>
            <DataTable.Cell>3502</DataTable.Cell>

          </DataTable.Row>

        </DataTable>
    </List.Accordion>
  }

  else if (visibleAnt) {
    list = 
    <Provider>
    <View style = {{flex: 1, justifyContent: 'flex-end'}}>
    <Portal>
        <Modal visible={visibleWorker} onDismiss={hideWorker} >
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Ant_Ex_일꾼.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleSupervisor} onDismiss={hideSupervisor}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Ant_Ex_감독.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleOffice} onDismiss={hideOffice}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Ant_Ex_회사원.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleChairman} onDismiss={hideChairman}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Ant_Ex_회장.png')}/>
          </View>
        </Modal>

    </Portal>
      <List.Accordion style = {{backgroundColor: 'brown'}}>
        <DataTable style = {{backgroundColor: 'white'}}>
          <DataTable.Row>
          <TouchableHighlight onPress={showWorker}>
          <Image
            style={styles.logo}
            source={require('./assets/일꾼.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  일꾼개미</DataTable.Cell>
            <DataTable.Cell numeric>20자원</DataTable.Cell>
          </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showSupervisor}>
          <Image
            style={styles.logo}
            source={require('./assets/일꾼.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  감독관개미</DataTable.Cell>
            <DataTable.Cell numeric>40자원</DataTable.Cell>
          </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showOffice}>
          <Image
            style={styles.logo}
            source={require('./assets/일꾼.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  회사원개미</DataTable.Cell>
            <DataTable.Cell numeric>80자원</DataTable.Cell>
          </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showChairman}>
          <Image
            style={styles.logo}
            source={require('./assets/일꾼.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  회장개미</DataTable.Cell>
            <DataTable.Cell numeric>200자원</DataTable.Cell>
          </DataTable.Row>

        </DataTable>
      </List.Accordion>
    </View>
    </Provider>
  }

  else if (visibleBuilding) {
    list = 
    <Provider>
    <View style = {{flex: 1, justifyContent: 'flex-end'}}>
    <Portal>
        <Modal visible={visibleHouse} onDismiss={hideHouse} >
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Building_Ex_벽돌집.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleApartment} onDismiss={hideApartment}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Building_Ex_아파트.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleCompany} onDismiss={hideCompany}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Building_Ex_회사.png')}/>
          </View>
        </Modal>

        <Modal visible={visibleHotel} onDismiss={hideHotel}>
          <View style = {{alignItems: 'center', justifyContent: 'center'}}>
          <Image source = {require('./assets/Building_Ex_호텔.png')}/>
          </View>
        </Modal>

      </Portal>
      <List.Accordion style = {{backgroundColor: 'brown'}}>
        <DataTable style = {{backgroundColor: 'white'}}>
        <DataTable.Row >
        <TouchableHighlight onPress = {showHouse}>
          <Image
            style={styles.logo}
            source={require('./assets/아파트.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  벽돌집</DataTable.Cell>
            <DataTable.Cell numeric>20자원</DataTable.Cell>
        </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showApartment}>
          <Image
            style={styles.logo}
            source={require('./assets/아파트.png')}/>
        </TouchableHighlight>
            <DataTable.Cell>  아파트</DataTable.Cell>
            <DataTable.Cell numeric>40자원</DataTable.Cell>
          </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showCompany}>
          <Image
            style={styles.logo}
            source={require('./assets/아파트.png')}/>
          </TouchableHighlight>
            <DataTable.Cell>  개미 회사</DataTable.Cell>
            <DataTable.Cell numeric>80자원</DataTable.Cell>
          </DataTable.Row>

          <DataTable.Row>
          <TouchableHighlight onPress={showHotel}>
          <Image
            style={styles.logo}
            source={require('./assets/아파트.png')}/>
          </TouchableHighlight>
            <DataTable.Cell>  개미 호텔</DataTable.Cell>
            <DataTable.Cell numeric>200자원</DataTable.Cell>
          </DataTable.Row>
        </DataTable>
      </List.Accordion>
    </View>
    </Provider>
  }

  else if (visibleMap) {
    list = 
    <List.Accordion style = {{backgroundColor: 'brown'}}>
    <View style = {{flexDirection: 'row', justifyContent: 'space-around',alignItems: 'center' , backgroundColor: 'gray', height: 258}}>
    <View style = {{width: 50, height: 231, justifyContent: 'space-between'}}>
        <TouchableHighlight onPress={() => {
         setStore(true),
          setCollection(false),
          setExpansion(false),
          setAchievement(false); 
        }}>
          <Image style = {{height: 50, width: 50}} source = {require('./assets/ButtonStore.png')}/>
        </TouchableHighlight>

        <TouchableHighlight onPress={() => {
          setStore(false),
          setCollection(true),
          setExpansion(false),
          setAchievement(false);
        }}>
          <Image style = {{height: 50, width: 50}} source = {require('./assets/ButtonCollection.png')}/>
        </TouchableHighlight >

        <TouchableHighlight onPress={() => {
          setStore(false),
          setCollection(false),
          setExpansion(true),
          setAchievement(false);
        }}>
          <Image style = {{height: 50, width: 50}} source = {require('./assets/확장_Button.png')}/>
        </TouchableHighlight>

        <TouchableHighlight onPress={() => {
          setStore(false),
          setCollection(false),
          setExpansion(false),
          setAchievement(true);
        }}>
          <Image style = {{height: 50, width: 50}} source = {require('./assets/업적_Button.png')}/>
        </TouchableHighlight>

    </View>
    <View style = {{flexDirection: 'column', alignItems: 'center', justifyContent: 'center', justifyContent: 'space-around', backgroundColor: 'white', width: 189, height: 230}}>
        <Modal visible = {visibleStore}>
          <View style = {{flexDirection: 'column', alignItems: 'center', justifyContent: 'center', justifyContent: 'space-around', backgroundColor: 'white', width: 189, height: 230}}>
          <Image source = {require('./assets/상점.png')}/>
          <Image source = {require('./assets/GoButton.png')}/>
          </View>
        </Modal>

        <Modal visible = {visibleCollection}>
          <View style = {{flexDirection: 'column', alignItems: 'center', justifyContent: 'center', justifyContent: 'space-around', backgroundColor: 'white', width: 189, height: 230}}>
          <Image source = {require('./assets/수집.png')}/>
          <Image source = {require('./assets/GoButton.png')}/>
          </View>
        </Modal>

        <Modal visible = {visibleExpansion}>
          <View style = {{flexDirection: 'column', alignItems: 'center', justifyContent: 'center', justifyContent: 'space-around', backgroundColor: 'white', width: 189, height: 230}}>
          <Image source = {require('./assets/확장.png')}/>
          <Image source = {require('./assets/GoButton.png')}/>
          </View>
        </Modal>

        <Modal visible = {visibleAchievement}>
          <View style = {{flexDirection: 'column', alignItems: 'center', justifyContent: 'center', justifyContent: 'space-around', backgroundColor: 'white', width: 189, height: 230}}>
          <Image source = {require('./assets/업적.png')}/>
          <Image source = {require('./assets/GoButton.png')}/>
          </View>
        </Modal>
    </View>
    </View>
  </List.Accordion>
  }

  else {
    list = null
  }


return(
  <ImageBackground source = {require('./assets/축소게임화면.png')} style = {{width: '100%', height: '100%'}}>
    <View style = {styles.setting}>
      <Button onPress = {pressSetting} style = {{backgroundColor: 'gray'}} color = 'white'>환경설정</Button>
      {/* <Button onPress = {pressSetting} title = "환경설정"/> */}
    </View>
    <View style = {{flex: 1, justifyContent: 'flex-end'}}>
      {list}
      <ImageBackground source = {require('./assets/UI.png')} style = {{width: '100%', height: 50}}>
      <View style = {{flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around'}}>
      <TouchableHighlight onPress={() => {
            setCity(true),
            setAnt(false),
            setBuilding(false),
            setMap(false);
          }}
          >
            <Image source = {require('./assets/CityButton.png')} />
      </TouchableHighlight>

      <TouchableHighlight onPress={() => {
            setCity(false),
            setAnt(true),
            setBuilding(false),
            setMap(false);
          }}
          >
            <Image source = {require('./assets/AntButton.png')} />
      </TouchableHighlight>

      <TouchableHighlight onPress={() => {
            setCity(false),
            setAnt(false),
            setBuilding(true),
            setMap(false);
          }}
          >
            <Image source = {require('./assets/BuildingButton.png')} />
      </TouchableHighlight>

      <TouchableHighlight onPress={() => {
            setCity(false),
            setAnt(false),
            setBuilding(false),
            setMap(true);
          }}
          >
            <Image source = {require('./assets/MapButton.png')} /> 
      </TouchableHighlight>              
      </View>                
      </ImageBackground>      
    </View>
  </ImageBackground>  
);
}

const Stack = createStackNavigator();
const Tab = createBottomTabNavigator();

export default function App() {
  return (
    <NavigationContainer>
        <Stack.Navigator>
          <Stack.Screen name = "Home" component = {HomeScreen}></Stack.Screen>
          <Stack.Screen name = "Main" component = {MainScreen}></Stack.Screen>
        </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },

  safeAreaContainer : 
  {
    flex: 1,
    backgroundColor: 'white',
    paddingTop: Platform.OS == 'android' ? 24 : 0,
    justifyContent: 'center', 
    alignItems: 'center'
  },  

  text1: 
  {
    fontSize: 24,
    backgroundColor: 'orange',
  }, 

  touchable: 
  {
    flex: 1,

  }, 

  setting: 
  {

    alignItems: 'flex-end',
 
  }, 

  city: 
  {
    flexDirection:'row',
    alignItems: 'flex-start'
  },
  logo: {
    backgroundColor: '#056ecf',
    height: 50,
    width: 50,
  },

  wrap: {flex: 1, justifyContent: 'center'},

  square: {
    backgroundColor: 'blue',
    alignSelf: 'center',
  },
});

const s = StyleSheet.create({
  backgroundImage: {
      flex: 1,
      width: null,
      height: null,
  }
});
